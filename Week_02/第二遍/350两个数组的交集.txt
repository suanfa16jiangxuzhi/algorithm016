class Solution {
    public int[] intersect(int[] nums1, int[] nums2) {
       // 判断长度，将长度较小的放到第一个参数（这步可以省略）
        if (nums1.length > nums2.length) {
            return intersect(nums2,nums1);
        }
        // 用map存储nums里的数值和出现次数
       Map<Integer,Integer> map = new HashMap<>();
        for (int num:nums1
             ) {
            int count = map.getOrDefault(num,0) + 1;
            map.put(num,count);
        }
        int[] intersection = new int[nums1.length];
        int index = 0;
        // 遍历nums2
        for (int num:nums2
             ) {
            int count = map.getOrDefault(num,0);
            if (count > 0) {
                intersection[index++] = num;
                count--;
                if (count > 0) {
                    map.put(num,count);
                } else {
                    map.remove(num);
                }
            }
        }
        return Arrays.copyOfRange(intersection,0,index);


    }
}