class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        Map<Integer,Integer> map = new HashMap<>();
		for (int num : nums) {
		map.put(num,map.getOrDefault(num,0) + 1);
		}
		PriorityQueue<Map.Entry<Integer,Integer>> maxHeap = 
									new PriorityQueue<>((a,b)->{return b.getValue() - a.getValue();}); 
		for (Map.Entry<Integer,Integer> entry : map.entrySet()) {
		maxHeap.add(entry);
		}
		int[] res = new int[k];
		int len = res.length;
		while (k > 0) {
		res[len - k] = maxHeap.poll().getKey();
		k--;
		}
		return res;
    }
}

// 好用的优先队列~~(是一个堆)
// 